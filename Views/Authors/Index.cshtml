@model BookProject1.ViewModels.AuthorViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Directors</h1>
@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<form asp-controller="Directors" asp-action="Index" method="get">
    <p>
        <input type="text" name="SearchString" value="@Model.SearchString" />
        <input type="submit" value="Search" />
    </p>
</form>

<div class="container-lg">
    <div class="row">
        @foreach (var item in Model.Authors)
        {
            <div class="col-md-6">
                <div class="card smooth-transition">
                    <div class="card-body">
                        <h5 class="card-title">@item.FirstName @item.LastName</h5>
                        <p class="card-text">Born: @Html.DisplayFor(modelItem => item.BirthDate)</p>
                        <p class="card-text">Nationality: @Html.DisplayFor(modelItem => item.Nationality)</p>
                        <p class="card-text">Gender: @Html.DisplayFor(modelItem => item.Gender)</p>
                        <div class="button-container">
                            @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                            {
                                <a class="btn btn-info btn-sm" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                                <a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                            }
                            <a class="btn btn-secondary btn-sm" asp-action="Details" asp-route-id="@item.Id">Details</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
    .container-lg {
        padding: 20px; /* Add padding to the container */
        overflow-x: hidden; /* Hide horizontal overflow */
    }

    .card {
        width: 100%; /* Ensure cards take full width */
        max-width: 800px; /* Set maximum width of each card */
        display: flex; /* Use flexbox for layout */
        border-radius: 20px;
        overflow: hidden;
        margin-bottom: 20px; /* Add space between cards */
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        transition: transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275), box-shadow 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

        .card:hover {
            box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);
            transform: scale(1.02);
        }

    .card-body {
        padding: 20px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        flex-grow: 1; /* Allow content to grow and take remaining space */
    }

    .card-title {
        font-size: 1.25rem;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .card-text {
        margin-bottom: 10px;
    }

    .button-container {
        display: flex;
        justify-content: flex-end;
    }

        .button-container a {
            margin-left: 10px;
        }

    .smooth-transition {
        transition: transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275), box-shadow 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    h1,
    .btn-outline-dark,
    form {
        margin-bottom: 20px;
    }
</style>
