@model BookProject1.ViewModels.BookGenreViewModel

@{
    ViewData["Title"] = "Index";
}
@using System.IO
<style>
    .container-lg {
        padding: 20px; /* Add padding to the container */
        overflow-x: hidden; /* Hide horizontal overflow */
    }

    .card {
        width: 100%; /* Ensure cards take full width */
        max-width: 800px; /* Set maximum width of each card */
        display: flex; /* Use flexbox for layout */
        border-radius: 20px;
        overflow: hidden;
        margin-bottom: 20px; /* Add space between cards */
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        transition: transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275), box-shadow 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

        .card:hover {
            box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);
            transform: scale(1.02);
        }

    .card-img-top {
        width: 200px; /* Set width of the image */
        height: auto; /* Maintain aspect ratio */
        border-top-left-radius: 20px; /* Rounded corners for image */
        border-bottom-left-radius: 20px;
        flex-shrink: 0; /* Don't allow image to shrink */
    }

    .card-body {
        padding: 20px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        flex-grow: 1; /* Allow content to grow and take remaining space */
    }

    .card-title {
        font-size: 1.25rem;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .card-text {
        margin-bottom: 10px;
    }

    .list-group-item {
        border: none;
        padding: 5px 0;
    }

    .button-container {
        display: flex;
        justify-content: flex-end;
    }

        .button-container a {
            margin-left: 10px;
        }

    .smooth-transition {
        transition: transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275), box-shadow 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    h1,
    .btn-outline-dark,
    form {
        margin-bottom: 20px;
    }
</style>

<div class="container-lg">
    <h1 class="mt-5 text-center b">Movie Catalog</h1>
    <br />
    <br />

    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
    {
        <p>
            <a asp-action="Create" class="btn btn-outline-dark">Create New</a>
        </p>
    }
    <form class="row g-3 justify-content-center" asp-controller="Books" asp-action="Index" method="get">
        <div class="col-lg-4 col-md-6">
            <select asp-for="BookGenre" asp-items="Model.Genres" class="form-control mb-3 mb-md-0">
                <option value="">All</option>
            </select>
        </div>

        <div class="col-lg-4 col-md-6">
            <label asp-for="SearchString" class="visually-hidden">Title:</label>
            <input type="text" asp-for="SearchString" class="form-control mb-3 mb-md-0" placeholder="Title">
        </div>

        <div class="col-lg-4 col-md-6">
            <label asp-for="AuthorSearchString" class="visually-hidden">Author:</label>
            <input type="text" asp-for="AuthorSearchString" class="form-control mb-3 mb-md-0" placeholder="Author">
        </div>
        <div class="col-md-2">
            <button id="filterButton" type="submit" class="btn btn-secondary w-100">Filter</button>
        </div>
    </form>

    <div class="row mt-4">
        @foreach (var item in Model.Books)
        {
            <div class="col-md-8 offset-md-2">
                <div class="card smooth-transition">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-4">
                                <img src="@Html.DisplayFor(modelItem => item.FrontPage)" class="card-img-top" alt="Book cover">
                            </div>
                            <div class="col-md-8">
                                <h5 class="card-title">@Html.DisplayFor(modelItem => item.Title)</h5>
                                <p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>
                                <ul class="list-group list-group-flush">
                                    <li class="list-group-item">
                                        <strong>Director:</strong><a asp-controller="Authors" asp-action="Details" asp-route-id="@item.AuthorId">
                                            @Html.DisplayFor(modelItem => item.Author.FullName)
                                        </a>
                                    </li>
                                    <li class="list-group-item"><strong>Release Date:</strong> @Html.DisplayFor(modelItem => item.YearPublished)</li>
                                    <li class="list-group-item"><strong>Distributed by:</strong> @Html.DisplayFor(modelItem => item.Publisher)</li>
                                    <li class="list-group-item"><strong>Box Office:$</strong>@Html.DisplayFor(modelItem => item.NumPages) <strong> million</strong></li>
                                    <li class="list-group-item">
                                        <strong>Genres:</strong>
                                        @foreach (var genre in item.BookGenres)
                                        {
                                            <a>@genre.Genre.GenreName</a>
                                            @if (!genre.Equals(item.BookGenres.Last()))
                                            {
                                                <span>,</span>
                                            }
                                        }
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="button-container">
                            <a class="btn btn-outline-dark" asp-action="Details" asp-route-id="@item.Id">Details</a>
                            @if (User.Identity.IsAuthenticated)
                            {
                                @if (User.IsInRole("Admin"))
                                {
                                    <a class="btn btn-outline-dark" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                                    <a class="btn btn-outline-dark" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                                }
                                else if (User.Identity.IsAuthenticated)
                                {
                                    <form asp-controller="UserBooks" asp-action="Create" method="post">
                                        <input type="hidden" name="id" value="@item.Id" />
                                        <input type="hidden" name="AppUser" value="@User.Identity.Name" />
                                        <button type="submit" class="btn btn-outline-dark">Add to My Movies</button>
                                    </form>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Add smooth transition class to cards when filter button is clicked
            $("#filterButton").click(function () {
                $(".card").addClass("smooth-transition");
            });
        });
    </script>
}
